import org.apache.tools.ant.taskdefs.condition.Os

ext {
    // The drivers we want to use
    drivers = ["firefox", "chrome", "phantomJs", "edge", "ie","chromeHeadless"]

    ext {
        groovyVersion = '2.4.8'
        gebVersion = '2.0'
        seleniumVersion = '3.8.1'
        chromeDriverVersion = '2.33'
        geckoDriverVersion = '0.19.1'
    }
}

apply plugin: "groovy"
apply from: "gradle/idea.gradle"


repositories {
    mavenCentral()
}

dependencies {
    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"

    // If using JUnit, need to depend on geb-junit (3 or 4)
    testCompile "org.gebish:geb-junit4:$gebVersion"

    // Drivers
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-edge-driver', version: '2.47.1'

    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-ie-driver', version: '3.4.0'

    testCompile (group: 'com.athaydes', name: 'spock-reports',
     version: '1.3.2'){
        transitive = false
    }
    testCompile 'org.slf4j:slf4j-api:1.7.13'
    testCompile 'org.slf4j:slf4j-simple:1.7.13'
    testCompile ("org.gebish:geb-spock:$gebVersion") {
        exclude group: "org.spockframework"
    }
    testCompile (group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4') {
        exclude group: "org.codehaus.groovy" 
    }

    testCompile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
    testCompile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '2.0.0'


}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        reports {
            html.destination = reporting.file("$name/tests")
            junitXml.destination = file("$buildDir/test-results/$name")
        }

        outputs.upToDateWhen { false }  // Always run tests
        systemProperty "browser", driver
        systemProperty "geb.env", target
        systemProperty "buildDir", "$buildDir"

    }
}


    test {
        dependsOn "${browser}Test"
        enabled = false
    }

    apply from: "gradle/ci.gradle"
